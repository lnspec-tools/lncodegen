# code generated by the lncodegen.rs please do not edit
 from lnspec_py.basic_type.int import U16Int
 from lnspec_py.basic_type.bitmask import Bitfield
 from lnspec_py.basic_type.tvl_record import TVLRecord


class InitMsg: 

    def encode(self) -> str:
        raw_msg = ''
        raw_msg += self.__u16_gflen.encode()
        if self.__bitf_globalfeatures => 0:
         	 raw_msg = Bitfield.encode(self.__bitf_globalfeatures)
        raw_msg += self.__u16_flen.encode()
        if self.__bitf_features => 0:
         	 raw_msg = Bitfield.encode(self.__bitf_features)
        raw_msg = self.__tlv_stream_init_tlvs.encode()
        return raw_msg
    # close scope


    @staticmethod
    def decode(raw_msg: str):
        self.__u16_gflen, raw_msg = U16Int.decode_with_hex_str(raw_msg)
        self.__bitf_globalfeatures, raw_msg = Bitfield.decode_with_len(raw_msg)
        self.__u16_flen, raw_msg = U16Int.decode_with_hex_str(raw_msg)
        self.__bitf_features, raw_msg = Bitfield.decode_with_len(raw_msg)
        self.__tlv_stream_init_tlvs = TLVRecord(raw_msg)self.__tlv_stream_init_tlvs.decode()
    # close scope


# close scope